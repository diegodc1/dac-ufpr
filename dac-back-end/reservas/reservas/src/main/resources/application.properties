# Nome da aplicação
spring.application.name=reservas

# Porta do servidor
server.port=8094

# Configuração do banco de dados PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/bd_reservas
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuração de pool de conexões
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000

# Configuração do JPA (Hibernate)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Configuração do RabbitMQ
spring.rabbitmq.host=rabbit-server
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/

# Configuração do Flyway
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.clean-on-validation-error=true
logging.level.org.flywaydb=DEBUG
flyway.cleanDisabled=false

# Log de SQL do Hibernate
logging.level.org.springframework=DEBUG
logging.level.org.hibernate=DEBUG

# Configuração de logging
logging.level.org.springframework.web=INFO
logging.level.org.springframework.boot=INFO
logging.level.org.springframework.jdbc.core=DEBUG

# Configuração de configuração adicional para ambientes de produção
# Ativa a compressão de respostas HTTP (melhora a performance)
server.compression.enabled=true
server.compression.min-response-size=1024

# Configuração do tamanho máximo de upload de arquivos
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Ativa o CORS
# Você pode adicionar um controle mais específico via filtros depois, caso necessário
spring.webflux.cors.enabled=true

# Configuração para diferentes ambientes
# Definir profiles para ambientes de desenvolvimento, produção, etc.
# Exemplo: no seu comando Maven ou Gradle, você pode definir o profile ativo:
# -Dspring.profiles.active=prod

# Configuração de produção (apenas exemplo, depende do seu ambiente)
# Não exibir logs de SQL em produção
logging.level.org.hibernate.SQL=OFF
logging.level.org.hibernate.type.descriptor.sql=OFF

# Para uma configuração mais segura de senhas e variáveis de ambiente, 
# você pode usar variáveis de ambiente ou arquivos externos.
# Por exemplo:
# spring.datasource.password=${DB_PASSWORD}
